version: '3.9'

services:
  ########  BEGIN  ########
  ######## PHP-FPM ########
  manager_php-fpm:
    hostname: ${DOMAIN}
    domainname: ${DOMAIN}
    working_dir: /app
    environment:
      PHP_INI_SCAN_DIR: "/usr/local/etc/php/custom.d:/usr/local/etc/php/conf.d"
    image: ${DOCKER_REGISTRY_HOST}/fpm:latest
    restart: always
    networks:
      - app-network
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy
    volumes:
      - ./app:/app:rw
      - ./docker/php-fpm:/usr/local/etc/php/custom.d
  ######## PHP-FPM ########
  ########   END   ########

  ########  BEGIN  ########
  ######## PHP-CLI ########
  manager_php-cli:
    hostname: ${DOMAIN}
    domainname: ${DOMAIN}
    working_dir: /app
    image: ${DOCKER_REGISTRY_HOST}/cli:latest
    command: bash -c "sleep 10 && ssh-keyscan gitlab.alltel24.ru > ~/.ssh/known_hosts 
              && composer install && php bin/console --no-interaction doctrine:migrations:migrate"
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./app:/app:rw
      - /root/.ssh/bitbucket_key:/root/.ssh/bitbucket_key:ro
  ######## PHP-CLI ########
  ########   END   ########

  ########    BEGIN   ########
  ########     CRON   ########
  manager_cron:
    hostname: ${DOMAIN}
    domainname: ${DOMAIN}
    working_dir: /app
    image: ${DOCKER_REGISTRY_HOST}/cli:latest
    command: crond -f -l 8
    restart: always
    depends_on:
      - manager_redis
      - manager_db
    networks:
      - app-network
    volumes:
      - ./app:/app:rw
      - ./docker/cron/log/cron.log:/var/log/cron/cron.log:rw
      - ./docker/cron/start_up.sh:/etc/crontabs/www-data:ro
  ########    CRON    ########
  ########     END    ########

  ########  BEGIN  ########
  ######## NGINX ########
  manager_nginx:
    hostname: ${DOMAIN}
    domainname: ${DOMAIN}
    image: ${CI_REGISTRY}/alltel24/docker/nginx:latest
    restart: always
    depends_on:
      - manager_php-fpm
    volumes:
      - ./app:/app:rw
      - ./docker/nginx/hosts:/etc/nginx/conf.d
      - ./docker/nginx/logs:/var/log/nginx:rw
    networks:
      - app-network
  ######## NGINX ########
  ########   END   ########

  ########  BEGIN  ########
  ######## REDIS ########
  manager_redis:
    hostname: ${DOMAIN}
    domainname: ${DOMAIN}
    working_dir: /app
    image: redis:7.2.1
    restart: always
    volumes:
      - ./docker/redis/data/:/data:rw
    networks:
      - app-network
  ######## REDIS ########
  ########   END   ########

  ########    BEGIN   ########
  ######## SUPERVISOR ########
  manager_supervisor:
    hostname: ${DOMAIN}
    domainname: ${DOMAIN}
    working_dir: /app
    image: ${DOCKER_REGISTRY_HOST}/supervisor:latest
    restart: always
    command: bash -c "/usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf"
    depends_on:
      manager_redis:
        condition: service_started
      manager_db:
        condition: service_healthy
    networks:
      - app-network
    volumes:
      - ./app:/app:rw
      - ./docker/supervisor/conf.d:/etc/supervisor/conf.d
      - ./docker/supervisor/log:/var/log/supervisor
  ######## SUPERVISOR ########
  ########     END    ########

  ########  BEGIN  ########
  ######## DATABASE ########
  manager_db:
    image: postgres:17-alpine
    shm_size: 128mb
    restart: always
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${DB_NAME}", "-U", "${DB_USER}" ]
      timeout: 30s
      interval: 10s
      retries: 10
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./docker/db/data:/var/lib/postgresql/data
    ports:
      - ${DB_EXTERNAL_PORT}:${DB_PORT}
    networks:
      - app-network
    command: [ "postgres", "-c", "logging_collector=on", "-c", "log_directory=/var/lib/postgresql/data/pg_log", "-c", "log_filename=postgresql.log", "-c", "log_statement=all" ]
  ######## DATABASE ########
  ########   END   ########
networks:
  app-network:
    driver: bridge
